package com.mycompany.oat2_pedrocaetano;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;

/**
 *
 * @author PedroCaetano
 */
public class TelaPrincipal extends javax.swing.JFrame {

    private File arquivoSelecionado;
    private Efeito efeito = Efeito.NENHUM;

    private enum Efeito {
        CINZA,
        MEIO,
        DIAGONAL,
        NENHUM
    }

    /**
     * Creates new form TelaPrincipal
     */
    public TelaPrincipal() {
        initComponents();
        jSlider1.setMajorTickSpacing(10);
        jSlider1.setMinorTickSpacing(0);
        jSlider1.setPaintTicks(true);
        jSlider1.setPaintLabels(true);
//        arquivoSelecionado = new File("C:\\Users\\dioge\\Desktop\\o-que-e-paisagem.jpg");
//        this.jLabel1.setIcon(new ImageIcon(this.arquivoSelecionado.toString()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Selecionar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jLabel1);

        jSlider1.setMaximum(50);
        jSlider1.setMinimum(-50);
        jSlider1.setValue(0);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        jButton2.setText("Preto e Branco");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Voltar Cor Original");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Dividir cores ");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Diagonal");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 844, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser chooser = new JFileChooser();
        var response = chooser.showOpenDialog(this);
        if (response == JFileChooser.APPROVE_OPTION) {
            this.arquivoSelecionado = chooser.getSelectedFile();
            this.jLabel1.setIcon(new ImageIcon(this.arquivoSelecionado.toString()));
            jSlider1.setValue(0);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        alterarTamanhoImagem();
    }//GEN-LAST:event_jSlider1StateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        efeito = Efeito.CINZA;
        alterarTamanhoImagem();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        efeito = Efeito.NENHUM;
        alterarTamanhoImagem();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        efeito = Efeito.MEIO;
        alterarTamanhoImagem();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        efeito = Efeito.DIAGONAL;
        alterarTamanhoImagem();
    }//GEN-LAST:event_jButton5ActionPerformed

    public void alterarTamanhoImagem() {
        try {
            BufferedImage imagem = ImageIO.read(arquivoSelecionado);
            var escalaSlider = jSlider1.getValue();
            var novaLargura = imagem.getWidth() + (imagem.getWidth() * escalaSlider / 100);
            var larguraAtual = imagem.getWidth();
            var alturaAtual = imagem.getHeight();

            var proporcao = novaLargura * 100 / larguraAtual;
            var novaAltura = proporcao * alturaAtual / 100;

            BufferedImage novaImagem
                    = new BufferedImage(novaLargura, novaAltura,
                            BufferedImage.TYPE_INT_RGB);
            Graphics2D gd = novaImagem.createGraphics();
            gd.drawImage(imagem, 0, 0, novaLargura,
                    novaAltura, null);
            gd.dispose();

            switch (efeito) {
                case CINZA ->
                    novaImagem = efeitoPretoEBranco(novaImagem, false);
                case MEIO ->
                    novaImagem = efeitoPretoEBranco(novaImagem, true);
                case DIAGONAL ->
                    novaImagem = efeitoDiagonal(novaImagem);
            }

            jLabel1.setIcon(new ImageIcon(novaImagem));

        } catch (IOException ex) {
            Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public BufferedImage efeitoPretoEBranco(BufferedImage bufferedImage, boolean metade) {
        // Cria uma nova imagem em preto e branco com as mesmas dimens√µes
        BufferedImage bwImage = new BufferedImage(bufferedImage.getWidth(),
                bufferedImage.getHeight(),
                BufferedImage.TYPE_INT_ARGB);

        /* Percorre todos os pixels da imagem colorida e converte
            para preto e branco */
        for (int x = 0; x < bufferedImage.getWidth(); x++) {
            for (int y = 0; y < bufferedImage.getHeight(); y++) {
                Color color = new Color(bufferedImage.getRGB(x, y));
                int gray = (int) (0.299 * color.getRed() + 0.587
                        * color.getGreen() + 0.114 * color.getBlue());
                Color bw = new Color(gray, gray, gray);

                if (!metade || x > bufferedImage.getWidth() / 2) {
                    bwImage.setRGB(x, y, bw.getRGB());
                } else {
                    bwImage.setRGB(x, y, bufferedImage.getRGB(x, y));
                }
            }

        }

        return bwImage;
    }

    public BufferedImage efeitoDiagonal(BufferedImage bufferedImage) {
        // Cria uma nova imagem em preto e branco com as mesmas dimens√µes
        BufferedImage bwImage = new BufferedImage(bufferedImage.getWidth(),
                bufferedImage.getHeight(),
                BufferedImage.TYPE_INT_ARGB);

        /* Percorre todos os pixels da imagem colorida e converte
            para preto e branco */
        for (int x = 0; x < bufferedImage.getWidth(); x++) {
            double percentualProgressoX = x * 100 / bufferedImage.getWidth();
            for (int y = 0; y < bufferedImage.getHeight(); y++) {
                Color color = new Color(bufferedImage.getRGB(x, y));
                int gray = (int) (0.299 * color.getRed() + 0.587
                        * color.getGreen() + 0.114 * color.getBlue());
                
                Color bw = new Color(gray, gray, gray);
                double percentualProgressoY = y * 100 / bufferedImage.getHeight();
                if (percentualProgressoY <= percentualProgressoX) {
                    bwImage.setRGB(x, y, bw.getRGB());
                } else {
                    bwImage.setRGB(x, y, bufferedImage.getRGB(x, y));
                }
            }
        }

        return bwImage;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new TelaPrincipal().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    // End of variables declaration//GEN-END:variables
}
